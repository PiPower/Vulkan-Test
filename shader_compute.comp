#version 450
 
layout (binding = 0, rgba8) uniform readonly image2D renderTexture;

layout (binding = 1, rgba8) uniform writeonly image2D targetTexture;

layout(binding = 2) uniform ComputeMetadata
{
	ivec4 data; // resX, resY, padd, padd
} metadata;

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main()
{
	ivec2 pixelCoords = ivec2(gl_LocalInvocationID.xy) + 32 * ivec2(gl_WorkGroupID.xy);
	if(pixelCoords.x >= metadata.data.x || pixelCoords.y >= metadata.data.y)
	{	
		return;
	}
	vec4 pixel = imageLoad(renderTexture, pixelCoords).rgba;
	
	if(gl_LocalInvocationID.x != 0 && gl_LocalInvocationID.y != 0)
	{
		pixel+= imageLoad(renderTexture, ivec2(gl_LocalInvocationID.xy) + ivec2(1, 0) + 32 * ivec2(gl_WorkGroupID.xy)).rgba;
		pixel+= imageLoad(renderTexture, ivec2(gl_LocalInvocationID.xy) - ivec2(1, 0) + 32 * ivec2(gl_WorkGroupID.xy)).rgba;
		pixel+= imageLoad(renderTexture, ivec2(gl_LocalInvocationID.xy) + ivec2(0, 1) + 32 * ivec2(gl_WorkGroupID.xy)).rgba;
		pixel+= imageLoad(renderTexture, ivec2(gl_LocalInvocationID.xy) - ivec2(0, 1) + 32 * ivec2(gl_WorkGroupID.xy)).rgba;
		pixel /= 5;
	}
	
	imageStore(targetTexture, pixelCoords, pixel);
}